{"version":3,"sources":["components/Table.js","components/banner.js","App.js","reportWebVitals.js","index.js"],"names":["Table","columns","data","useState","filterInput","setFilterInput","useTable","useFilters","getTableProps","getTableBodyProps","headerGroups","rows","setFilter","prepareRow","className","value","onChange","e","target","undefined","placeholder","style","display","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","Banner","App","products","setProducts","useEffect","fetch","then","res","json","React","useMemo","Header","accessor","Cell","alt","class","width","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"iPAKe,SAASA,EAAT,GAAmC,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KACvC,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAOIC,mBACF,CACEL,UACAC,QAEFK,cAXAC,EADF,EACEA,cACAC,EAFF,EAEEA,kBACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,KACAC,EALF,EAKEA,UACAC,EANF,EAMEA,WAeF,OACE,qCACE,qBAAKC,UAAU,yBAAf,SACE,uBACEA,UAAU,eACVC,MAAOX,EACPY,SAbmB,SAACC,GAC1B,IAAMF,EAAQE,EAAEC,OAAOH,YAASI,EAEhCP,EAAU,QAASG,GACnBV,EAAeU,IAUTK,YAAa,kBAGjB,kDACMZ,KADN,IAEEM,UAAU,wDACVO,MAAO,CAAEC,QAAS,SAHpB,UAKE,gCACGZ,EAAaa,KAAI,SAACC,GAAD,OAChB,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQH,KAAI,SAACI,GAAD,OACvB,+CAAQA,EAAOC,kBAAf,cACGD,EAAOE,OAAO,UACf,+BACGF,EAAOG,SACJH,EAAOI,aACL,gBACA,gBACF,oBAOhB,iDAAWtB,KAAX,aACGE,EAAKY,KAAI,SAACS,EAAKC,GAEd,OADApB,EAAWmB,GAET,8CAAQA,EAAIE,eAAZ,aACGF,EAAIG,MAAMZ,KAAI,SAACa,GACd,OACE,8CAAQA,EAAKC,gBAAb,aAA8BD,EAAKP,OAAO,8B,MCrD/CS,MAXf,WACI,OACI,sBAAKxB,UAAU,SAAf,UACA,kDACA,uDACA,qECiBO,SAASyB,IACtB,MAAgCpC,mBAAS,IAAzC,mBAAOqC,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACRC,MAAM,qCACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GAAD,OAAUL,EAAYK,QAC7B,IAGH,IAAM7C,EAAU8C,IAAMC,SACpB,iBAAM,CACJ,CACEC,OAAQ,gBACRC,SAAU,QACVC,KAAM,YAAgB,IAAbpC,EAAY,EAAZA,MACP,OACE,qBACEqC,IAAI,UACJC,MAAM,wBACNC,MAAO,IACPC,IAAKxC,MAKb,CACEkC,OAAQ,gBACRC,SAAU,SAEZ,CACED,OAAQ,gBACRC,SAAU,SAEZ,CACED,OAAQ,sBACRC,SAAU,kBAGd,IAEF,OACE,sBAAKpC,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,cAACd,EAAD,CAAOC,QAASA,EAASC,KAAMsC,OCvErC,IAYegB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASnC,OACP,cAAC,IAAMoC,WAAP,UACE,cAAC1B,EAAD,MAEF2B,SAASC,eAAe,SAM1BX,M","file":"static/js/main.7d8532e8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useTable, useFilters, useSortBy } from \"react-table\";\r\n\r\n//utilising react-table to set up my page\r\n//previously used generic html pages (allproductslist to display the store page)\r\nexport default function Table({ columns, data }) {\r\n  const [filterInput, setFilterInput] = useState(\"\");\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    setFilter,\r\n    prepareRow\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data\r\n    },\r\n    useFilters\r\n  );\r\n  const handleFilterChange = (e) => {\r\n    const value = e.target.value || undefined;\r\n    //setFilter(\"name\", value);\r\n    setFilter(\"title\", value);\r\n    setFilterInput(value);\r\n  };\r\n  //page layout\r\n  return (\r\n    <>\r\n      <div className=\"form-group input-group\">\r\n        <input\r\n          className=\"form-control\"\r\n          value={filterInput}\r\n          onChange={handleFilterChange}\r\n          placeholder={\"Search name\"}\r\n        />\r\n      </div>\r\n      <table\r\n        {...getTableProps()}\r\n        className=\"table table-bordered table-condensed table-responsive\"\r\n        style={{ display: \"table\" }}\r\n      >\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>\r\n                  {column.render(\"Header\")}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \" ðŸ”½\"\r\n                        : \" ðŸ”¼\"\r\n                      : \"\"}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}","import React from \"react\";\r\nimport \"../styles/Header.css\";\r\n\r\n\r\nfunction Banner() {\r\n    return (\r\n        <div className=\"header\">\r\n        <h1>Brotherman Store</h1>\r\n        <p>All your ever needed!!</p>\r\n        <p>Contact us for express delivery.</p>\r\n      </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default Banner;","// import React from 'react';\n// import './App.css';\n// import Banner from './components/banner';\n// import StorePage from './components/storePage';\n// import Table from './components/Table';\n\n// function App() {\n//   return (\n//     <div >\n//       <Banner />\n//       <Table />\n//       <StorePage />\n\n\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Table from \"./components/Table\";\nimport Banner from \"./components/banner\"\n\nexport default function App() {\n  const [products, setProducts] = useState([]);\n  //using \"fetch\" to make a request to the fake store API\n  useEffect(() => {\n    fetch(\"https://fakestoreapi.com/products\")\n      .then((res) => res.json())\n      .then((json) => setProducts(json));\n  }, []);\n\n  //grabing key value pair from JSON object response\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Product Image\",\n        accessor: \"image\",\n        Cell: ({ value }) => {\n          return (\n            <img\n              alt=\"product\"\n              class=\"img-fluid img-rounded\"\n              width={200}\n              src={value}\n            />\n          );\n        }\n      },\n      {\n        Header: \"Product Title\",\n        accessor: \"title\" // accessor is the \"key\" in the data\n      },\n      {\n        Header: \"Product Price\",\n        accessor: \"price\"\n      },\n      {\n        Header: \"Product Description\",\n        accessor: \"description\"\n      }\n    ],\n    []\n  );\n  return (\n    <div className=\"App\">\n      <Banner />\n      \n      <Table columns={columns} data={products} />\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}